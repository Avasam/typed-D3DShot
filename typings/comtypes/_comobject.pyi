from _typeshed import Incomplete

__all__ = ["COMObject"]

class E_NotImplemented(Exception): ...

class _MethodFinder:
    inst: Incomplete
    names: Incomplete
    def __init__(self, inst) -> None: ...
    def get_impl(self, interface, mthname, paramflags, idlflags): ...
    def find_method(self, fq_name, mthname): ...
    def find_impl(self, interface, mthname, paramflags, idlflags): ...
    def setter(self, propname): ...
    def getter(self, propname): ...

class LocalServer:
    def run(self, classobjects) -> None: ...
    def run_sta(self) -> None: ...
    def run_mta(self) -> None: ...
    def Lock(self) -> None: ...
    def Unlock(self) -> None: ...

class InprocServer:
    locks: Incomplete
    def __init__(self) -> None: ...
    def Lock(self) -> None: ...
    def Unlock(self) -> None: ...
    def DllCanUnloadNow(self): ...

class COMObject:
    def __new__(cls, *args, **kw): ...
    __server__: Incomplete
    @staticmethod
    def __run_inprocserver__() -> None: ...
    @staticmethod
    def __run_localserver__(classobjects) -> None: ...
    @staticmethod
    def __keep__(obj) -> None: ...
    @staticmethod
    def __unkeep__(obj) -> None: ...
    def IUnknown_AddRef(self, /, this, __InterlockedIncrement=..., _debug=...): ...
    def IUnknown_Release(self, /, this, __InterlockedDecrement=..., _debug=...): ...
    def IUnknown_QueryInterface(self, this, riid, ppvObj, _debug=...): ...
    def QueryInterface(self, interface): ...
    def ISupportErrorInfo_InterfaceSupportsErrorInfo(self, this, riid): ...
    def IProvideClassInfo_GetClassInfo(self): ...
    def IProvideClassInfo2_GetGUID(self, dwGuidKind): ...
    def IDispatch_GetTypeInfoCount(self): ...
    def IDispatch_GetTypeInfo(self, this, itinfo, lcid, ptinfo): ...
    def IDispatch_GetIDsOfNames(self, this, riid, rgszNames, cNames, lcid, rgDispId): ...
    def IDispatch_Invoke(
        self, this, dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr
    ): ...
    def IPersist_GetClassID(self): ...
