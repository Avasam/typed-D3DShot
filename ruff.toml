# SPDX-License-Identifier: MIT
# Copyright 2025 Beslogic Inc.

# The source skeleton for this configuration can be found at
# https://github.com/BesLogic/shared-configs/blob/main/ruff.toml
# Modifications to this file that are not project-specific should also be done upstream.

# https://docs.astral.sh/ruff/configuration/
line-length = 100
preview = true
required-version = ">=0.13.0" # tool.ruff.target-version is inferred from project.requires-python
# Exclude auto-generated files
extend-exclude = []

# https://docs.astral.sh/ruff/settings/#flake8-implicit-str-concat
[lint.flake8-implicit-str-concat]
allow-multiline = false

# https://docs.astral.sh/ruff/settings/#isort
[lint.isort]
combine-as-imports = true
split-on-trailing-comma = false

# https://docs.astral.sh/ruff/settings/#mccabe
[lint.mccabe]
# Arbitrary to 2 bytes, same as SonarLint
max-complexity = 15

[lint.pylint]
# Arbitrary to 1 byte, same as SonarLint
max-args = 7
# At least same as max-complexity
max-branches = 15

[lint]
future-annotations = true
select = ["ALL"]
# https://docs.astral.sh/ruff/rules/
ignore = [
  ###
  # Not needed or wanted
  ###
  "D1", # pydocstyle Missing docstring
  "D401", # pydocstyle: non-imperative-mood
  "EM", # flake8-errmsg
  # This is often something we can't control: https://github.com/astral-sh/ruff/issues/9497
  # Also false-positive with positional-only arguments: https://github.com/astral-sh/ruff/issues/3247
  "FBT003", # flake8-boolean-trap: boolean-positional-value-in-call
  "INP", # flake8-no-pep420
  "ISC003", # flake8-implicit-str-concat: explicit-string-concatenation
  # Short messages are still considered "long" messages
  "TRY003", # tryceratops: raise-vanilla-args
  # Don't remove commented code, also too inconsistant
  "ERA001", # eradicate: commented-out-code
  # contextlib.suppress is roughly 3x slower than try/except
  "SIM105", # flake8-simplify: use-contextlib-suppress
  # Not colored correctly in Pylance https://github.com/microsoft/pylance-release/issues/6942
  "UP047", # non-pep695-generic-function
  # Checked by type-checker (pyright/mypy)
  # "ANN", # flake-annotations # WE USE IT IN THIS LIB TO PREVENT MISSING ANNOTATIONS
  "PGH003", # blanket-type-ignore
  # "TC", # flake8-type-checking # WE WANT IT IN THIS LIBRARY TO AVOID CIRCULAR DEPENDENCIES
  # Already shown by Pylance, checked by pyright, and can be caused by overloads.
  "ARG002", # Unused method argument
  # We want D213: multi-line-summary-second-line and D211: no-blank-line-before-class
  "D203", # pydocstyle: one-blank-line-before-class
  "D212", # pydocstyle: multi-line-summary-first-line
  # Allow differentiating between broken (FIXME) and to be done/added/completed (TODO)
  "TD001", # flake8-todos: invalid-todo-tag
  # Often just leads to redundant more verbose code when needing an actual str
  "PTH208", # Use `pathlib.Path.iterdir()` instead.
  # Typeshed doesn't want complex or non-literal defaults for maintenance and testing reasons.
  # This doesn't affect us, let's have more complete stubs.
  "PYI011", # typed-argument-default-in-stub
  "PYI014", # argument-default-in-stub
  "PYI053", # string-or-bytes-too-long

  ###
  # These should be warnings (https://github.com/astral-sh/ruff/issues/1256 & https://github.com/astral-sh/ruff/issues/1774)
  ###
  "FIX", # flake8-fixme
  # Not all TODOs are worth an issue, this would be better as a warning
  "TD003", # flake8-todos: missing-todo-link
  # Python 3.11 introduced "zero cost" exception handling
  # Good to watch for, but often unfixable
  # "PERF203", # try-except-in-loop, # WE WANT IT IN THIS LIBRARY FOR PERFORMANCE ON OLDER PYTHON

  # False-positives
  "TC004", # https://github.com/astral-sh/ruff/issues/3821
  # Too many magic number "2" that are preferable inline. https://github.com/astral-sh/ruff/issues/10009
  # Too many right angles in this project
  "PLR2004", # magic-value-comparison

  ###
  # Conflict with formatter (you can remove this section if you don't use Ruff as a formatter)
  ###
  "COM812", # missing-trailing-comma

  ###
  # Rules about missing special documentation. Up to you if you wanna enable these, you must also disable D406, D407
  ###
  "DOC201", #	docstring-missing-returns
  "DOC402", #	docstring-missing-yields
  "DOC501", #	docstring-missing-exception
  # "D406", # new-line-after-section-name, conflicts with DOC
  # "D407", # dashed-underline-after-section, conflicts with DOC

  ###
  # Specific to this project
  ###
  "CPY001", # missing-copyright-notice: Assume license from root
  "PD", # Not using Pandas
  "PLC0415", # import-outside-top-level # https://github.com/astral-sh/ruff/issues/12803
  "T201", # Using print as log and for benchmark

  ### FIXME/TODO: I'd normally set them as temporarily warnings, but no warnings in Ruff yet:
  ### https://github.com/astral-sh/ruff/issues/1256 & https://github.com/astral-sh/ruff/issues/1774):
  "RUF012", # mutable-class-default

  # Changing these would break backwards compatibility
  "FBT001",
  "FBT002",
  "N801",
]
typing-modules = ["d3dshot._compat"]

[lint.per-file-ignores]
"**/typings/**/*.pyi" = [
  "F811", # Re-exports false positives
  # The following can't be controlled for external libraries:
  "A", # Shadowing builtin names
  "E741", # ambiguous variable name
  "F403", # `from . import *` used; unable to detect undefined names
  "FBT", # flake8-boolean-trap
  "ICN001", # unconventional-import-alias
  "N8", # Naming conventions
  "PLC2701", # Private name import
  "PLE0302", # The special method expects a given signature
  "PLR0904", # Too many public methods
  "PLR0913", # Argument count
  "PLR0917", # Too many positional arguments
  "PLW3201", # misspelled dunder method name
  "PYI042", # CamelCase TypeAlias
  "SLOT", # flake8-slots
  # Stubs can sometimes re-export entire modules.
  # Issues with using a star-imported name will be caught by type-checkers.
  "F405", # may be undefined, or defined from star imports
  # It's normal to be missing annotations for local stubs.
  # If they were complete, we'd upload them to typeshed!
  "ANN0",
  "ANN2",
]
